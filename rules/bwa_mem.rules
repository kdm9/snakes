# coding: utf-8

"""
Read mapping with BWA MEM (http://bio-bwa.sourceforge.net).

For usage, include this in your workflow.

Expects the global variable config of at least the following structure,
assuming that the desired reference sequence is some genome to be found under
the given path, and two units A and B have been sequenced with Illumina, the
first paired and the second single end:

{
    "references": {
        "genome": "path/to/genome.fasta"
    },
    "samples": {
        "A": ["A"],
        "B": ["B"]
    },
    "units": {
        "A":
            ["path/to/A_R1.fastq.gz", "path/to/A_R2.fastq.gz"],
        "B":
            ["path/to/B.fastq.gz"]
    },
    "platform": "Illumina",
    "params_bwa_mem": ""
}

Note the separation between samples and units that allows to have more than
one sequencing run for each sample, or multiple lanes per sample.
The "params_bwa_mem" entry is optional.
"""


__author__ = "Johannes KÃ¶ster (http://johanneskoester.bitbucket.org)"
__license__ = "MIT"


UNIT_TO_SAMPLE = {
    unit: sample for sample, units in config["samples"].items()
    for unit in units}

from snakemake.exceptions import MissingInputException


rule bwa_mem:
    input:
        lambda wildcards: config["references"][wildcards.reference],
        lambda wildcards: config["units"][wildcards.unit]
    output:
        "out/alignments/{sample}_{unit}_{reference}.bam"
    params:
        sample=lambda wildcards: UNIT_TO_SAMPLE[wildcards.unit],
	platform=config.get("platform", "Illumina"),
        custom=config.get("params_bwa_mem", "")
    log:
        "logs/mapping/{unit}_{reference}.log"
    threads: 8
    shell:
        "bwa mem {params.custom} "
        r"-R '@RG\tID:{wildcards.unit}\t"
        "SM:{params.sample}\tPL:{params.platform}' "
        "-t {threads} {input}  2> {log} "
        "| samtools view -Sbh - > {output}"


rule extract_unmapped:
    input:
        lambda wildcards: config["references"][wildcards.reference],
        lambda wildcards: config["units"][wildcards.unit]
    output:
        "out/fastq/{sample}_{unit}_{reference}.fastq.gz"
    params:
        custom=config.get("params_bwa_mem", "")
    log:
        "logs/mapping/{unit}_{reference}.log"
    threads: 8
    shell:
        "bwa mem {params.custom} "
        "-t {threads} {input}  2> {log} "
        "| samtools view -Suh - "
        "| bam2fastq --all-to-stdout --no-aligned /dev/stdin "
        "| gzip -9 > {output}"
